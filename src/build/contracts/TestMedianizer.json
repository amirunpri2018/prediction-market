{
  "contractName": "TestMedianizer",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "read",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/leo/flyingcarpet/prediction-market/contracts/TestMedianizer.sol\":\"TestMedianizer\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/leo/flyingcarpet/prediction-market/contracts/ETHValueOracle.sol\":{\"keccak256\":\"0x66b55e9c18a50c5d75ffd175f4a6f5b5b5fd12a57dca9f030e43b304d3d323bf\",\"urls\":[\"bzzr://b80bfec31d3f509bbae5dd429016e46578d4aa046475a7748fa7622a67b8a862\"]},\"/Users/leo/flyingcarpet/prediction-market/contracts/TargetValueOracle.sol\":{\"keccak256\":\"0xd509be0414f136bed7c27df14064d194a48b85221e04b66716c9fc82bb2be6b5\",\"urls\":[\"bzzr://ef73cfc3d49e6ce991c0d499f83e2a4655b92ddc0fe4e6b16450247b712912c3\"]},\"/Users/leo/flyingcarpet/prediction-market/contracts/TestMedianizer.sol\":{\"keccak256\":\"0x5644ee320a5fcbaa8a4289098fe25eb2f066ea0da1392a34bee6b0d40aa6735f\",\"urls\":[\"bzzr://b3aae758675ce18122471ab203bd60018c7991ab236d962676fdee02984cbe78\"]},\"@gnosis.pm/hg-contracts/contracts/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x10343cd2da9bec10446451aa4f5fefc2fdd01f691d279b71e2f806f3a25c6b3d\",\"urls\":[\"bzzr://a76eaacc5082f5f83f6bf8f2a44eca80761551e2c119e2013944535ef7c87e30\"]},\"@gnosis.pm/hg-contracts/contracts/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x4971631d7de74464fed3e0abac04553e917be5e8cd10b3f825e2e7c39ccc2734\",\"urls\":[\"bzzr://e1e88dfe7440ceab59d4cd604d12e5dc93409a3c5058e497763703027ea7b9e6\"]},\"@gnosis.pm/hg-contracts/contracts/ERC1155/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x675eaf04410e936cbd50325aa661216666214ca89f113b0880b917e3d00dda26\",\"urls\":[\"bzzr://e6d4db28e3180f99029df28a1df07988e1d313d6981725ec22af84f799ccdf6a\"]},\"@gnosis.pm/hg-contracts/contracts/ERC1820Registry.sol\":{\"keccak256\":\"0x5a98e0985b1c43c8fe355ea4ca5d2f434ffbf24c8b77bf0c1a0b405fbd728dee\",\"urls\":[\"bzzr://15b63f9b61ed5c19993149654f5bdc1a71909973f510fa858d094a2dae9af512\"]},\"@gnosis.pm/hg-contracts/contracts/OracleConsumer.sol\":{\"keccak256\":\"0xf54ac4060959a5e1c1714933711c90cd62bbbf127d5e37dc6cbcbb3711b3c186\",\"urls\":[\"bzzr://2efcd8089b7f032f4cc05e4a00304eb01bad0edbc43388332c79b010df532ffc\"]},\"@gnosis.pm/hg-contracts/contracts/PredictionMarketSystem.sol\":{\"keccak256\":\"0x18e0ce1f7e728a9f38b1d309bd3a44e5b988779131922d6b85777582d8222e6f\",\"urls\":[\"bzzr://d55af5598b18264cc1b02beee0f2123f8f27e6cea3f6cc0b3a6d34246bfc5542\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060ab8061001e6000396000f3fe6080604052600436106039576000357c01000000000000000000000000000000000000000000000000000000009004806357de26a414603e575b600080fd5b348015604957600080fd5b5060506066565b6040518082815260200191505060405180910390f35b600080680acc98178a499100009050806001029150509056fea165627a7a723058200feda7de8336cbd0fab859f072beab7339593982110f4cb9044285e3ef48842c0029",
  "deployedBytecode": "0x6080604052600436106039576000357c01000000000000000000000000000000000000000000000000000000009004806357de26a414603e575b600080fd5b348015604957600080fd5b5060506066565b6040518082815260200191505060405180910390f35b600080680acc98178a499100009050806001029150509056fea165627a7a723058200feda7de8336cbd0fab859f072beab7339593982110f4cb9044285e3ef48842c0029",
  "sourceMap": "77:180:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;77:180:12;;;;;;;",
  "deployedSourceMap": "77:180:12:-;;;;;;;;;;;;;;;;;;;;;;121:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:134:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;160:7;177:14;194:21;177:38;;238:9;230:18;;223:25;;;121:134;:::o",
  "source": "pragma solidity ^0.5.1;\n\nimport { Medianizer } from \"./ETHValueOracle.sol\";\n\ncontract TestMedianizer is Medianizer {\n    function read() external view returns (bytes32) {\n      uint testValue = 199210000000000000000;\n      return bytes32(testValue);\n    }\n}\n",
  "sourcePath": "/Users/leo/flyingcarpet/prediction-market/contracts/TestMedianizer.sol",
  "ast": {
    "absolutePath": "/Users/leo/flyingcarpet/prediction-market/contracts/TestMedianizer.sol",
    "exportedSymbols": {
      "TestMedianizer": [
        641
      ]
    },
    "id": 642,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 622,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/leo/flyingcarpet/prediction-market/contracts/ETHValueOracle.sol",
        "file": "./ETHValueOracle.sol",
        "id": 624,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 400,
        "src": "25:50:12",
        "symbolAliases": [
          {
            "foreign": 623,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 625,
              "name": "Medianizer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 358,
              "src": "104:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Medianizer_$358",
                "typeString": "contract Medianizer"
              }
            },
            "id": 626,
            "nodeType": "InheritanceSpecifier",
            "src": "104:10:12"
          }
        ],
        "contractDependencies": [
          358
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 641,
        "linearizedBaseContracts": [
          641,
          358
        ],
        "name": "TestMedianizer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "169:86:12",
              "statements": [
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "name": "testValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "177:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 631,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "177:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 634,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "313939323130303030303030303030303030303030",
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "194:21:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_199210000000000000000_by_1",
                      "typeString": "int_const 199210000000000000000"
                    },
                    "value": "199210000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "177:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "testValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "238:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "230:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": "bytes32"
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "230:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 630,
                  "id": 638,
                  "nodeType": "Return",
                  "src": "223:25:12"
                }
              ]
            },
            "documentation": null,
            "id": 640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "read",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "134:2:12"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "160:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "159:9:12"
            },
            "scope": 641,
            "src": "121:134:12",
            "stateMutability": "view",
            "superFunction": 357,
            "visibility": "external"
          }
        ],
        "scope": 642,
        "src": "77:180:12"
      }
    ],
    "src": "0:258:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/leo/flyingcarpet/prediction-market/contracts/TestMedianizer.sol",
    "exportedSymbols": {
      "TestMedianizer": [
        641
      ]
    },
    "id": 642,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 622,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/leo/flyingcarpet/prediction-market/contracts/ETHValueOracle.sol",
        "file": "./ETHValueOracle.sol",
        "id": 624,
        "nodeType": "ImportDirective",
        "scope": 642,
        "sourceUnit": 400,
        "src": "25:50:12",
        "symbolAliases": [
          {
            "foreign": 623,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 625,
              "name": "Medianizer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 358,
              "src": "104:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Medianizer_$358",
                "typeString": "contract Medianizer"
              }
            },
            "id": 626,
            "nodeType": "InheritanceSpecifier",
            "src": "104:10:12"
          }
        ],
        "contractDependencies": [
          358
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 641,
        "linearizedBaseContracts": [
          641,
          358
        ],
        "name": "TestMedianizer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 639,
              "nodeType": "Block",
              "src": "169:86:12",
              "statements": [
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "name": "testValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "177:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 631,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "177:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 634,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "313939323130303030303030303030303030303030",
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "194:21:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_199210000000000000000_by_1",
                      "typeString": "int_const 199210000000000000000"
                    },
                    "value": "199210000000000000000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "177:38:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "testValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "238:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "230:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": "bytes32"
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "230:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 630,
                  "id": 638,
                  "nodeType": "Return",
                  "src": "223:25:12"
                }
              ]
            },
            "documentation": null,
            "id": 640,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "read",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "134:2:12"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 640,
                  "src": "160:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "159:9:12"
            },
            "scope": 641,
            "src": "121:134:12",
            "stateMutability": "view",
            "superFunction": 357,
            "visibility": "external"
          }
        ],
        "scope": 642,
        "src": "77:180:12"
      }
    ],
    "src": "0:258:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.18",
  "updatedAt": "2019-12-09T06:29:31.277Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}